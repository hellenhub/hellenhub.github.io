<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Ubuntu - 标签 - JonnyHub Blog - A Java Programmer.</title><link>https://jonnyhub.gitee.io/tags/ubuntu/</link><description>Ubuntu - 标签 - JonnyHub Blog - A Java Programmer.</description><generator>Hugo -- gohugo.io</generator><managingEditor>jonny0624@gmail.com (Jonny.Chang)</managingEditor><webMaster>jonny0624@gmail.com (Jonny.Chang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 20 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://jonnyhub.gitee.io/tags/ubuntu/" rel="self" type="application/rss+xml"/><item><title>Ubuntu 初始化记录</title><link>https://jonnyhub.gitee.io/2019/02/2019-02-20-ubuntu-%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%B0%E5%BD%95/</link><pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://jonnyhub.gitee.io/2019/02/2019-02-20-ubuntu-%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%B0%E5%BD%95/</guid><description><![CDATA[<p>使用腾讯云 CVM 安装了系统之后，需要做的一些基本设置与配置。</p>
<h2 id="系统更新与优化">系统更新与优化</h2>
<blockquote>
<p>本文默认: 在开启 root 登录后，一切使用 root 用户操作。</p>
</blockquote>
<h3 id="开启-root-登录">开启 root 登录</h3>
<p>默认可登录帐户名是: ubuntu(密码可以使用 key，或者安装时设定)， 为了使用 root 需要开启。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># 我使用 key 登录，先修改 ubuntu 密码</span>
sudo passwd ubuntu
<span class="c1"># 修改 root ，可以与 ubuntu 一样</span>
sudo passwd root

<span class="c1"># 修改 ssh 配置  末尾添加: PermitRootLogin yes</span>
sudo vim /etc/ssh/sshd_config
PermitRootLogin yes
<span class="c1"># PasswordAuthentication yes 修改这个参数 no 改为 yes 是为了使用密码可以登录，默认只能使用 ssh-key</span>
sudo service ssh restart
<span class="c1"># 然后使用 root 用户登录即可，如果无法使用 ssh-key 登录，可以使用以下命令(确保本地已生成 ssh-key):</span>
<span class="c1"># 本地使用，非服务器</span>
ssh-copy-id -i ~/.ssh/id_rsa user@host
<span class="c1"># 附上生成 ssh-key 的命令，建议一路回车即可</span>
ssh-keygen -t rsa -b <span class="m">4096</span> -C <span class="s2">&#34;user@163.com&#34;</span>
ssh-copy-id -i ~/.ssh/id_rsa root@150.109.108.7
</code></pre></td></tr></table>
</div>
</div><h3 id="更新系统安装常用软件">更新系统，安装常用软件。</h3>
<blockquote>
<p>使用 root 登录之后操作</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># 更新系统</span>
apt-get -y update <span class="o">&amp;&amp;</span> apt-get -y upgrade
<span class="c1"># 安装常用软件</span>
apt-get -y install git vim zsh aptitude exuberant-ctags wget <span class="se">\
</span><span class="se"></span>    screen apt-transport-https ca-certificates curl <span class="se">\
</span><span class="se"></span>    software-properties-common openssh-server snap landscape-common fish <span class="se">\
</span><span class="se"></span>    build-essential debian-keyring gcc-4.1-doc <span class="se">\
</span><span class="se"></span>    lib64stdc++6 glibc-doc manpages-dev libstdc++6-4.1-doc <span class="se">\
</span><span class="se"></span>    bison ed gawk gcc libc6-dev make cmake
<span class="c1"># 安装 webhookd</span>
<span class="nb">echo</span> <span class="s2">&#34;deb http://packages.azlux.fr/debian/ buster main&#34;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/azlux.list
wget -qO - https://azlux.fr/repo.gpg.key <span class="p">|</span> sudo apt-key add -
sudo apt-get -y install webhookd

<span class="c1"># 下载 OneinStack 并解压</span>
<span class="nb">cd</span> ~ <span class="o">&amp;&amp;</span> wget http://mirrors.linuxeye.com/oneinstack-full.tar.gz <span class="o">&amp;&amp;</span> tar xzf oneinstack-full.tar.gz

<span class="c1"># 安装 GoLang</span>
sudo add-apt-repository ppa:longsleep/golang-backports
sudo apt-get -y update
sudo apt-get -y install golang-go

<span class="c1"># 安装 OhMyZsh</span>
sh -c <span class="s2">&#34;</span><span class="k">$(</span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="k">)</span><span class="s2">&#34;</span>

</code></pre></td></tr></table>
</div>
</div><h3 id="配置-ohmyzsh">配置 OhMyZsh</h3>
<ul>
<li>zshrc 文件:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$HOME</span>/bin:/usr/local/bin:<span class="nv">$PATH</span>
<span class="nb">export</span> <span class="nv">ZSH</span><span class="o">=</span><span class="s2">&#34;/root/.oh-my-zsh&#34;</span>
<span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">&#34;robbyrussell&#34;</span>
<span class="nv">plugins</span><span class="o">=(</span>
    z git mvn npm nvm ubuntu github docker docker-compose git-auto-fetch alias-tips
    zsh-autosuggestions zsh-syntax-highlighting zsh-completions
<span class="o">)</span>
<span class="nb">source</span> <span class="nv">$ZSH</span>/oh-my-zsh.sh
<span class="c1"># User configuration</span>
<span class="nb">export</span> <span class="nv">MANPATH</span><span class="o">=</span><span class="s2">&#34;/usr/local/man:</span><span class="nv">$MANPATH</span><span class="s2">&#34;</span>
<span class="nb">export</span> <span class="nv">LANG</span><span class="o">=</span>zh_CN.UTF-8
<span class="o">[[</span> -e ~/.profile <span class="o">]]</span> <span class="o">&amp;&amp;</span> emulate sh -c <span class="s1">&#39;source ~/.profile&#39;</span>
<span class="c1"># Compilation flags</span>
<span class="nb">export</span> <span class="nv">ARCHFLAGS</span><span class="o">=</span><span class="s2">&#34;-arch x86_64&#34;</span>
<span class="c1"># Set personal aliases</span>
<span class="nb">alias</span> <span class="nv">zshconfig</span><span class="o">=</span><span class="s2">&#34;vim ~/.zshrc&#34;</span>
<span class="nb">alias</span> <span class="nv">zshsource</span><span class="o">=</span><span class="s2">&#34;source ~/.oh-my-zsh&#34;</span>
<span class="nb">alias</span> <span class="nv">rm</span><span class="o">=</span><span class="s2">&#34;rm -r&#34;</span>
<span class="nb">alias</span> <span class="nv">cp</span><span class="o">=</span><span class="s2">&#34;cp -f&#34;</span>
<span class="nb">alias</span> <span class="nv">mv</span><span class="o">=</span><span class="s2">&#34;mv -f&#34;</span>
<span class="c1"># nvm</span>
<span class="nb">export</span> <span class="nv">NVM_DIR</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.nvm&#34;</span>
<span class="o">[</span> -s <span class="s2">&#34;</span><span class="nv">$NVM_DIR</span><span class="s2">/nvm.sh&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="se">\.</span> <span class="s2">&#34;</span><span class="nv">$NVM_DIR</span><span class="s2">/nvm.sh&#34;</span>  <span class="c1"># This loads nvm</span>
<span class="o">[</span> -s <span class="s2">&#34;</span><span class="nv">$NVM_DIR</span><span class="s2">/bash_completion&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="se">\.</span> <span class="s2">&#34;</span><span class="nv">$NVM_DIR</span><span class="s2">/bash_completion&#34;</span>  <span class="c1"># This loads nvm bash_completion</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>安装插件</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">git clone https://github.com/zsh-users/zsh-autosuggestions <span class="si">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="p">~/.oh-my-zsh/custom</span><span class="si">}</span>/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-completions <span class="si">${</span><span class="nv">ZSH_CUSTOM</span><span class="p">:=~/.oh-my-zsh/custom</span><span class="si">}</span>/plugins/zsh-completions
git clone https://github.com/djui/alias-tips <span class="si">${</span><span class="nv">ZSH_CUSTOM</span><span class="p">:=~/.oh-my-zsh/custom</span><span class="si">}</span>/plugins/alias-tips
git clone https://github.com/zsh-users/zsh-syntax-highlighting <span class="si">${</span><span class="nv">ZSH_CUSTOM</span><span class="p">:=~/.oh-my-zsh/custom</span><span class="si">}</span>/plugins/zsh-syntax-highlighting
<span class="nb">source</span> ~/.zshrc
</code></pre></td></tr></table>
</div>
</div><h3 id="安装-npm--nvm">安装 npm &amp; nvm</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># 安装nvm</span>
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh <span class="p">|</span> bash
sudo tee ~/.profile <span class="s">&lt;&lt;-&#39;EOF&#39;
</span><span class="s">export NVM_DIR=&#34;$HOME/.nvm&#34;
</span><span class="s">[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;&amp; . &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm
</span><span class="s">EOF</span>
sudo tee ~/.zshrc <span class="s">&lt;&lt;-&#39;EOF&#39;
</span><span class="s">export NVM_DIR=&#34;$HOME/.nvm&#34;
</span><span class="s">[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;&amp; \. &#34;$NVM_DIR/nvm.sh&#34;  # This loads nvm
</span><span class="s">[ -s &#34;$NVM_DIR/bash_completion&#34; ] &amp;&amp; \. &#34;$NVM_DIR/bash_completion&#34;  # This loads nvm bash_completion
</span><span class="s">EOF</span>
<span class="nb">source</span> ~/.zhsrc
<span class="c1"># 安装 Node 和 最新版 npm</span>
nvm install --lts
nvm use --lts
nvm install-latest-npm
<span class="c1"># 配置 cnpm [[ 仅国内机房使用 ]]</span>
npm install -g cnpm --registry<span class="o">=</span>https://registry.npm.taobao.org
</code></pre></td></tr></table>
</div>
</div><h3 id="配置-中文环境">配置 中文环境</h3>
<p>设置命令(root):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">dpkg-reconfigure locales
<span class="c1"># 第一步:选择所有 zh_CN 开头的</span>
<span class="c1"># 第二步: 选择 zh_CN.UTF-8</span>
</code></pre></td></tr></table>
</div>
</div><p>配置:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># 注释原有的内容</span>
sed <span class="s1">&#39;s/^/#&amp;/g&#39;</span> /etc/default/locale
<span class="c1"># 修改 /etc/default/locale [配置中文]</span>
cat &gt;&gt;/etc/default/locale<span class="s">&lt;&lt;EOF
</span><span class="s">LANG=&#34;zh_CN.UTF-8&#34;
</span><span class="s">LANGUAGE=&#34;zh_CN:zh&#34;
</span><span class="s">LC_NUMERIC=&#34;zh_CN&#34;
</span><span class="s">LC_TIME=&#34;zh_CN&#34;
</span><span class="s">LC_MONETARY=&#34;zh_CN&#34;
</span><span class="s">LC_PAPER=&#34;zh_CN&#34;
</span><span class="s">LC_NAME=&#34;zh_CN&#34;
</span><span class="s">LC_ADDRESS=&#34;zh_CN&#34;
</span><span class="s">LC_TELEPHONE=&#34;zh_CN&#34;
</span><span class="s">LC_MEASUREMENT=&#34;zh_CN&#34;
</span><span class="s">LC_IDENTIFICATION=&#34;zh_CN&#34;
</span><span class="s">LC_ALL=&#34;zh_CN.UTF-8&#34;
</span><span class="s">EOF</span>
<span class="c1"># 不修改原有内容！ [配置中文]</span>
cat &gt;&gt;/etc/environment<span class="s">&lt;&lt;EOF
</span><span class="s">LANG=&#34;zh_CN.UTF-8&#34;
</span><span class="s">LANGUAGE=&#34;zh_CN:zh&#34;
</span><span class="s">LC_NUMERIC=&#34;zh_CN&#34;
</span><span class="s">LC_TIME=&#34;zh_CN&#34;
</span><span class="s">LC_MONETARY=&#34;zh_CN&#34;
</span><span class="s">LC_PAPER=&#34;zh_CN&#34;
</span><span class="s">LC_NAME=&#34;zh_CN&#34;
</span><span class="s">LC_ADDRESS=&#34;zh_CN&#34;
</span><span class="s">LC_TELEPHONE=&#34;zh_CN&#34;
</span><span class="s">LC_MEASUREMENT=&#34;zh_CN&#34;
</span><span class="s">LC_IDENTIFICATION=&#34;zh_CN&#34;
</span><span class="s">LC_ALL=&#34;zh_CN.UTF-8&#34;
</span><span class="s">EOF</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="修改登录界面">修改登录界面:</h3>
<p>去除一些臃肿的信息</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mv /etc/update-motd.d/50-motd-news /etc/update-motd.d/50-motd-news.bak
mv /etc/update-motd.d/80-livepatch /etc/update-motd.d/80-livepatch.bak
mv /etc/update-motd.d/10-help-text /etc/update-motd.d/10-help-text.bak

</code></pre></td></tr></table>
</div>
</div><p>添加登录图画，可自定义</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">sudo tee /etc/motd <span class="s">&lt;&lt;-&#39;EOF&#39;
</span><span class="s">       dP
</span><span class="s">       88
</span><span class="s">       88 .d8888b. 88d888b. 88d888b. dP    dP
</span><span class="s">       88 88&#39;  `88 88&#39;  `88 88&#39;  `88 88    88
</span><span class="s">88.  .d8P 88.  .88 88    88 88    88 88.  .88
</span><span class="s"> `Y8888&#39;  `88888P&#39; dP    dP dP    dP `8888P88
</span><span class="s">oooooooooooooooooooooooooooooooooooooo~~~~.88~
</span><span class="s">                                      d8888P
</span><span class="s">EOF</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="webhookd-配置">webhookd 配置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-service" data-lang="service"><span class="k">[Unit]</span>
<span class="na">Description</span><span class="o">=</span><span class="s">WEBHOOKD</span>

<span class="k">[Service]</span>
<span class="na">ExecStart</span><span class="o">=</span><span class="s">webhookd</span>
<span class="na">User</span><span class="o">=</span><span class="s">webhookd</span>
<span class="na">Group</span><span class="o">=</span><span class="s">webhookd</span>
<span class="na">EnvironmentFile</span><span class="o">=</span><span class="s">-/etc/default/webhookd.env</span>
<span class="na">EnvironmentFile</span><span class="o">=</span><span class="s">-/etc/webhookd.env</span>
<span class="na">Restart</span><span class="o">=</span><span class="s">always</span>
<span class="na">Type</span><span class="o">=</span><span class="s">simple</span>
<span class="na">RestartSec</span><span class="o">=</span><span class="s">30s</span>

<span class="k">[Install]</span>
<span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">
<span class="c1"># 安装 nodejs &amp; nvm</span>
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh <span class="p">|</span> bash
sudo tee ~/.profile <span class="s">&lt;&lt;-&#39;EOF&#39;
</span><span class="s">export NVM_DIR=&#34;$HOME/.nvm&#34;
</span><span class="s">[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;&amp; . &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm
</span><span class="s">EOF</span>
<span class="nb">source</span> ~/.profile
</code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>